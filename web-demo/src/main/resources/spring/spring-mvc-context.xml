<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<!-- 设置属性配置文件位置 -->
	<context:property-placeholder location="classpath:config.properties" ignore-unresolvable="true" />

	<!-- 扫描注解的包 -->
	<context:component-scan base-package="com.xxx.*.*.controllers"/>  
	
	<mvc:resources location="/html/" mapping="/html/**" />
	
	<mvc:default-servlet-handler />
	

	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
				<property name="objectMapper" ref="dateTimeObjectMapper"></property>
				<property name="supportedMediaTypes">  
	                <list>  
	                    <value>application/json</value>  
	                    <value>text/json</value>  
	                </list>  
	            </property>  
			</bean>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes" value="text/html;charset=UTF-8" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!--拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- /**表示所有url包括子url路径 -->
			<mvc:mapping path="/bs/**" />
			<mvc:mapping path="/xx/**" />
			<mvc:exclude-mapping path="/bs/user/logout"/>
			<bean class="com.xxx.bs.security.XAuthInterceptor">
			</bean>
		</mvc:interceptor>
	
		<mvc:interceptor>
			<!-- /**表示所有url包括子url路径 -->
			<mvc:mapping path="/bs/**" />
			<mvc:mapping path="/xx/**"/>
			<bean class="com.xxx.common.interceptor.SlowRequestInterceptor">
				<property name="minSlowTime" value="${log.minSlowTime}"></property>
			</bean>
		</mvc:interceptor>
		<!-- company id -->
		<mvc:interceptor>
			<mvc:mapping path="/bs/**" />
			<mvc:mapping path="/xx/**"/>
			<bean class="com.xxx.bs.security.CompanyInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为50MB -->
		<property name="maxUploadSize">
			<value>52428800</value>
		</property>
	</bean>

	<!-- 校验器 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- hibernate校验器 -->
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则默认使用classpath下的ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	<!-- 校验错误信息配置文件 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- 资源文件名 -->
		<property name="basenames">
			<list>
				<value>validation</value>
			</list>
		</property>
		<!-- 资源文件编码格式 -->
		<property name="fileEncodings" value="utf-8" />
		<!-- 对资源文件内容缓存时间，单位秒 -->
		<property name="cacheSeconds" value="120" />
	</bean>

	<!-- 全局异常处理器 只要实现HandlerExceptionResolver接口就是全局异常处理器 
	<bean class="com.xxx.common.exception.CustomExceptionResolver"></bean>-->
	<bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/html/xxx/xx/"
          p:suffix=".html">
    </bean>
</beans>
